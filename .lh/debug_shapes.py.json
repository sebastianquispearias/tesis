{
    "sourceFile": "debug_shapes.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1750545090492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750545413928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,34 @@\n-from main_semisup_tesis import MixedDataLoader, build_model, get_augmentations\r\n-from metrics_utils import DiceLoss, get_consistency_weight\r\n-import torch\r\n+# debug_shapes.py\r\n+from main_semisup_tesis import (\r\n+    MixedDataLoader,\r\n+    get_training_augmentation,\r\n+    get_validation_augmentation,\r\n+    get_preprocessing,\r\n+    preprocess_input\r\n+)\r\n+import numpy as np\r\n \r\n-# --- Parámetros mínimos para arrancar un loader ---\r\n+# Ajusta estas rutas a tu estructura\r\n+x_lab_dir   = r\"C:\\Users\\User\\Desktop\\tesis\\data\\all_results\\regimes\\C25\\train\\images_labeled\"\r\n+y_lab_dir   = r\"C:\\Users\\User\\Desktop\\tesis\\data\\all_results\\regimes\\C25\\train\\masks_labeled\"\r\n+x_unlab_dir = r\"C:\\Users\\User\\Desktop\\tesis\\data\\all_results\\regimes\\C25\\train\\images_unlabeled\"\r\n+\r\n batch_size = 2\r\n-arch = 'deeplabv3+'\r\n \r\n-# Asume que tu MixedDataLoader se construye así:\r\n-# loader = MixedDataLoader(labeled_dataset, unlabeled_dataset, batch_size, augmentations...)\r\n+# Instanciar MixedDataLoader con los argumentos correctos\r\n loader = MixedDataLoader(\r\n-    train_labeled_images='train/images_labeled',\r\n-    train_labeled_masks='train/masks_labeled',\r\n-    train_unlabeled_images='train/images_unlabeled',\r\n-    batch_size=batch_size,\r\n-    strong_aug=get_augmentations(strong=True),\r\n-    weak_aug=get_augmentations(strong=False),\r\n+    x_lab_dir, y_lab_dir, x_unlab_dir,\r\n+    batch_size_lab       = batch_size,\r\n+    batch_size_unlab     = batch_size,\r\n+    augment_lab          = get_training_augmentation(),\r\n+    augment_unlab_student= get_training_augmentation(),\r\n+    augment_unlab_teacher= get_validation_augmentation(),\r\n+    preprocess           = get_preprocessing(preprocess_input)\r\n )\r\n \r\n-x_lab, y_lab, x_unl_stu, x_unl_tea = next(iter(loader))\r\n-print(\"x_lab:\", tuple(x_lab.shape))\r\n-print(\"y_lab:\", tuple(y_lab.shape))\r\n-print(\"x_unl_student:\", tuple(x_unl_stu.shape))\r\n-print(\"x_unl_teacher:\", tuple(x_unl_tea.shape))\r\n+# Saca un solo lote y muestra shapes\r\n+x_lab, y_lab, x_unl_s, x_unl_t = next(iter(loader))\r\n+print(\"x_lab shape:          \", x_lab.shape)\r\n+print(\"y_lab shape:          \", y_lab.shape)\r\n+print(\"x_unl_student shape:  \", x_unl_s.shape)\r\n+print(\"x_unl_teacher shape:  \", x_unl_t.shape)\r\n"
                },
                {
                    "date": 1750545641409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,13 @@\n # debug_shapes.py\r\n+import sys\r\n+# 1) Importamos tu módulo (que *redirige* stdout/stderr)\r\n+import main_semisup_tesis as m\r\n+\r\n+# 2) Restauramos la salida a consola\r\n+sys.stdout = sys.__stdout__\r\n+sys.stderr = sys.__stderr__\r\n+\r\n from main_semisup_tesis import (\r\n     MixedDataLoader,\r\n     get_training_augmentation,\r\n     get_validation_augmentation,\r\n@@ -7,16 +15,14 @@\n     preprocess_input\r\n )\r\n import numpy as np\r\n \r\n-# Ajusta estas rutas a tu estructura\r\n x_lab_dir   = r\"C:\\Users\\User\\Desktop\\tesis\\data\\all_results\\regimes\\C25\\train\\images_labeled\"\r\n y_lab_dir   = r\"C:\\Users\\User\\Desktop\\tesis\\data\\all_results\\regimes\\C25\\train\\masks_labeled\"\r\n x_unlab_dir = r\"C:\\Users\\User\\Desktop\\tesis\\data\\all_results\\regimes\\C25\\train\\images_unlabeled\"\r\n \r\n batch_size = 2\r\n \r\n-# Instanciar MixedDataLoader con los argumentos correctos\r\n loader = MixedDataLoader(\r\n     x_lab_dir, y_lab_dir, x_unlab_dir,\r\n     batch_size_lab       = batch_size,\r\n     batch_size_unlab     = batch_size,\r\n@@ -25,10 +31,9 @@\n     augment_unlab_teacher= get_validation_augmentation(),\r\n     preprocess           = get_preprocessing(preprocess_input)\r\n )\r\n \r\n-# Saca un solo lote y muestra shapes\r\n x_lab, y_lab, x_unl_s, x_unl_t = next(iter(loader))\r\n-print(\"x_lab shape:          \", x_lab.shape)\r\n-print(\"y_lab shape:          \", y_lab.shape)\r\n-print(\"x_unl_student shape:  \", x_unl_s.shape)\r\n-print(\"x_unl_teacher shape:  \", x_unl_t.shape)\r\n+print(\"x_lab shape:         \", x_lab.shape)\r\n+print(\"y_lab shape:         \", y_lab.shape)\r\n+print(\"x_unl_student shape: \", x_unl_s.shape)\r\n+print(\"x_unl_teacher shape: \", x_unl_t.shape)\r\n"
                }
            ],
            "date": 1750545090492,
            "name": "Commit-0",
            "content": "from main_semisup_tesis import MixedDataLoader, build_model, get_augmentations\r\nfrom metrics_utils import DiceLoss, get_consistency_weight\r\nimport torch\r\n\r\n# --- Parámetros mínimos para arrancar un loader ---\r\nbatch_size = 2\r\narch = 'deeplabv3+'\r\n\r\n# Asume que tu MixedDataLoader se construye así:\r\n# loader = MixedDataLoader(labeled_dataset, unlabeled_dataset, batch_size, augmentations...)\r\nloader = MixedDataLoader(\r\n    train_labeled_images='train/images_labeled',\r\n    train_labeled_masks='train/masks_labeled',\r\n    train_unlabeled_images='train/images_unlabeled',\r\n    batch_size=batch_size,\r\n    strong_aug=get_augmentations(strong=True),\r\n    weak_aug=get_augmentations(strong=False),\r\n)\r\n\r\nx_lab, y_lab, x_unl_stu, x_unl_tea = next(iter(loader))\r\nprint(\"x_lab:\", tuple(x_lab.shape))\r\nprint(\"y_lab:\", tuple(y_lab.shape))\r\nprint(\"x_unl_student:\", tuple(x_unl_stu.shape))\r\nprint(\"x_unl_teacher:\", tuple(x_unl_tea.shape))\r\n"
        }
    ]
}